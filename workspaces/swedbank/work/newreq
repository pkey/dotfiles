#!/usr/bin/env bash

modules=()
scripts=()
branch="";
target_branch="project/integration";
ticket="AF-xx"
message=""

reviewers=()
reviewers_string="["
for reviewer in "${reviewers[@]::${#reviewers[@]}-1}"
do
    reviewers_string+='{"user": {"name": "'"$reviewer"'"}}, '
done
reviewers_string+='{"user": {"name": "'"${reviewers[@]: -1:1}"'"}}'
reviewers_string+="]"

for module in "${modules[@]}"
do
    arr=(${module//;/ })
    project=${arr[0]}
    module_name=${arr[1]}

    fdp add "$project" "$module_name"'#'"$target_branch"''
    cd "$module_name"

    for script in "${scripts[@]}"
    do
        node ../bulks/scripts/"$script"
    done

#    yarn --force
#    yarn lint --fix

    git checkout -b "$branch" && git commit -am "fix($ticket): $message" --allow-empty && git push -u origin head
#    git push -f
    curl -u : --negotiate -k -X POST -H "Content-Type: application/json" https://git.swedbank.net/rest/api/latest/projects/"$project"/repos/"$module_name"/pull-requests -d '{ "title": "'"$message"'", "description": "", "state": "OPEN", "open": true, "closed": false, "fromRef": { "id": "refs/heads/'"$branch"'", "repository": { "slug": "'"$module_name"'", "name": null, "project": { "key": "'"$project"'" } } }, "toRef": { "id": "refs/heads/'"$target_branch"'", "repository": { "slug": "'"$module_name"'", "name": null, "project": { "key": "'"$project"'" } } }, "locked": false, "reviewers": '"$reviewers_string"', "links": { "self": [ null ] } }'
    cd ..
done
